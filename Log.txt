PROJECT LOG:

7/25/2018

	Tasks:
			- plan model functionality
			- determine how graphics will be displayed
			- determine how model functionality will translate to graphical display

	Notes/Challenges:
		
			Dr. Morgan suggested the use of primitive graphic objects in order to create cell representations. After initial testing I've decided to go ahead an build the cell graphics using the primitives. One of the key issues is figuring out how to dynamically assign each graphical component in memory so they can be individually accessed for later adjustments.

					- One possible solution to this may be creating a cell array. A single cell in this array would represent the graphic of an entire cell. Each cell contains a second array within itself. This second array contains each individual graphic compenent that is used to create the whole. 

			Another challenge is how can I go about most efficiently storing and recording the values that define each cell, such as length, radius, position, etc.

				- This problem is similar to the earlier grpahics issue. I beleive I can take the same approach and create a cell array that within each cell contains a secondary array that hold all the necessary cell information. 

			This solution makes functionality and graphics communication simple. Each cell representing a cell in the functionality array will be tied to it's graphical representation cell in the graphical array, thus solving the translation issue.

			Note, it might seem counter productive to split cell data and cell graphical data into two different cell arrays. I decided to stick to this decision due to the fact that keeping them seperate allows the secondary matrices to be of a single type making the data easier to store and retrieve and inhances readability.

	Progress:

			- familiarized myself with primitives and have succesfully ran a few tests on app designer. I am confident that this appraoch will be the best method by with to represent the model

			- begun building a simple cell model 


7/27/2018

	Tasks:

			- Make Progress on Simple Cell Model

	Notes/Challenges:

			I have decided to take a different appraoch in representing a cell. I will instead design a cell class that will contain all the underlying data and graphical information, individual cells will be part of a greater matrix and the characterestics of each cell can be accessed through the object. 

			Building on that previous idea from today I think I will take it a step farther by creating point classes, each point will describe either a nucleus or membrane point and have "links" to the other points which they are connected to, this way it will be easy to track which point is connected to what and their relationship to one another. This way changes to one point can easily initiate a chain reaction within the cell and neighboring cells and alter all required values acting as an interconnected network.

			A cell class will noo longer contain the data within it's structure, instead simply point to the membrane and nucleaus points that it is made up of, this will make it simpler to implement mitosis as instead we simple rearrage pointers rather than alter data.

	Progress:

			- begun building the functions that will produce the data that will be stored in the cell object.
			- created MemPoint and NucPoint classes which will represent Membrance and Nucleus points respectively.
			- created cell class which will point to its respective membrance and nucleus points.
			 

7/30/2018

	Tasks

		- Continue work on Simple Cell Model

		Notes/Challenges:

			I am using cell array within the cell class to contain the children membrane and nucleus nodes. This can be swapped out for a dedicated cell array object in a later time.

			I'm struggling with how I want to properly have memberane cells interact and keep track on what other cell membrances are nearest to them in the most efficient manner possible. I have yet to come up with any solutions that are satisfactory....I have a feeling this might be the biggest challenge of the model.

			In the meantime I will finish up the simlpe cell model and create a rendering function to test if it is working properly from there I can begin adding more parameters and functionality.

	Progress:

		- The Simple Cell Model is complete.

7/31/2018

	Tasks

		- Working on Cell Growth and mitosis today.

		Notes/Challenges:


			Grow function works properly in an ideal cell situation but I am still unsure as to how I want to place the nodes in an unideal situation. The model as it is assumes that the new membrane node will be placed along the radius of the cell assuming no other external forces have warped the size of the cell. Obviously this can cause errors down the line as it would result in membranes being created within adjacent cells.

			a potantial solution is placeing if within the middle of the shortest distance between the two nodes in which the new node will be placed. I'll implement this change once the mitosis function is completed and have a properly functioning "ideal" cell.


	Progress:

		- Growth functionality in cells complete.


8/5/2018

	Tasks

		- Start Mitosis Process.
		- Implement force detection on individual nodes.
		- Noticed a node connection issue on grow, this needs to be fixed.

	Notes/Challeneges: 

	Progress:

		- consolidated functionality into the cell class


8/8/2018

	Tasks

		- Implement Mitosis
		- Implemented force dectection
		- consolidate more functionality

	Notes/Challenges

		It seems according to the article that so long as there is no force on a cell significant enough to reduce it's maximum volume then it may be capable of growing, if a cell grows to twice it's original size then it can be split due to mitosis. 

		Therefore it is important to note that growth will only occur during "ideal" cell conditions (cell is a perfect circle)
		
	Progess:
	
		- growth functionality issues have been fixed 

8/13/2018

	Tasks

		- rework growth

	Notes/Challenges

		growth has proven a lot more difficult that previously thought. we cannot make the assumption that growth will only occur when a cell is a perfect circle, there are many other shapes which a cell can take which will still allow for growth, I'm trying to figure out how to make growth work properly in a non ideal situattion.

		assumption, even in an ideal situation the averaging of the voigt forces on a new point should place it in the proper location.

		where will the new point be initially placed? midpoint along the membrane between the selected points.

		Another emormous issue is the order at which force is calculated. In the real world a single application of force would effect multiple areas of a system simulaneously. With a computer we are limited to only calculating one effect at a time. How best to split this?

		Important note, the mass of each node is 1/N * mass of nuc/cell. So when calculating viogt forces we must remember F = ma, now that we are given a mass we can calculate the rate at which a specific node is accelerating.
		


	Progress:

		- all default values have been added to cell
		- 