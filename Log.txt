PROJECT LOG:

7/25/2018

	Tasks:
			- plan model functionality
			- determine how graphics will be displayed
			- determine how model functionality will translate to graphical display

	Notes/Challenges:
		
			Dr. Morgan suggested the use of primitive graphic objects in order to create cell representations. After initial testing I've decided to go ahead an build the cell graphics using the primitives. One of the key issues is figuring out how to dynamically assign each graphical component in memory so they can be individually accessed for later adjustments.

					- One possible solution to this may be creating a cell array. A single cell in this array would represent the graphic of an entire cell. Each cell contains a second array within itself. This second array contains each individual graphic compenent that is used to create the whole. 

			Another challenge is how can I go about most efficiently storing and recording the values that define each cell, such as length, radius, position, etc.

				- This problem is similar to the earlier grpahics issue. I beleive I can take the same approach and create a cell array that within each cell contains a secondary array that hold all the necessary cell information. 

			This solution makes functionality and graphics communication simple. Each cell representing a cell in the functionality array will be tied to it's graphical representation cell in the graphical array, thus solving the translation issue.

			Note, it might seem counter productive to split cell data and cell graphical data into two different cell arrays. I decided to stick to this decision due to the fact that keeping them seperate allows the secondary matrices to be of a single type making the data easier to store and retrieve and inhances readability.

	Progress:

			- familiarized myself with primitives and have succesfully ran a few tests on app designer. I am confident that this appraoch will be the best method by with to represent the model

			- begun building a simple cell model 


7/27/2018

	Tasks:

			- Make Progress on Simple Cell Model

	Notes/Challenges:

			I have decided to take a different appraoch in representing a cell. I will instead design a cell class that will contain all the underlying data and graphical information, individual cells will be part of a greater matrix and the characterestics of each cell can be accessed through the object. 

			Building on that previous idea from today I think I will take it a step farther by creating point classes, each point will describe either a nucleus or membrane point and have "links" to the other points which they are connected to, this way it will be easy to track which point is connected to what and their relationship to one another. This way changes to one point can easily initiate a chain reaction within the cell and neighboring cells and alter all required values acting as an interconnected network.

			A cell class will noo longer contain the data within it's structure, instead simply point to the membrane and nucleaus points that it is made up of, this will make it simpler to implement mitosis as instead we simple rearrage pointers rather than alter data.

	Progress:

			- begun building the functions that will produce the data that will be stored in the cell object.
			- created MemPoint and NucPoint classes which will represent Membrance and Nucleus points respectively.
			- created cell class which will point to its respective membrance and nucleus points.
			 

7/30/2018

	Tasks

		- Continue work on Simple Cell Model

		Notes/Challenges:

			I am using cell array within the cell class to contain the children membrane and nucleus nodes. This can be swapped out for a dedicated cell array object in a later time.

			I'm struggling with how I want to properly have memberane cells interact and keep track on what other cell membrances are nearest to them in the most efficient manner possible. I have yet to come up with any solutions that are satisfactory....I have a feeling this might be the biggest challenge of the model.

			In the meantime I will finish up the simlpe cell model and create a rendering function to test if it is working properly from there I can begin adding more parameters and functionality.

	Progress:

		- The Simple Cell Model is complete.

7/31/2018

	Tasks

		- Working on Cell Growth and mitosis today.

		Notes/Challenges:


			Grow function works properly in an ideal cell situation but I am still unsure as to how I want to place the nodes in an unideal situation. The model as it is assumes that the new membrane node will be placed along the radius of the cell assuming no other external forces have warped the size of the cell. Obviously this can cause errors down the line as it would result in membranes being created within adjacent cells.

			a potantial solution is placeing if within the middle of the shortest distance between the two nodes in which the new node will be placed. I'll implement this change once the mitosis function is completed and have a properly functioning "ideal" cell.


	Progress:

		- Growth functionality in cells complete.


8/5/2018

	Tasks

		- Start Mitosis Process.
		- Implement force detection on individual nodes.
		- Noticed a node connection issue on grow, this needs to be fixed.

	Notes/Challeneges: 

	Progress:

		- consolidated functionality into the cell class


8/8/2018

	Tasks

		- Implement Mitosis
		- Implemented force dectection
		- consolidate more functionality

	Notes/Challenges

		It seems according to the article that so long as there is no force on a cell significant enough to reduce it's maximum volume then it may be capable of growing, if a cell grows to twice it's original size then it can be split due to mitosis. 

		Therefore it is important to note that growth will only occur during "ideal" cell conditions (cell is a perfect circle)
		
	Progess:
	
		- growth functionality issues have been fixed 

8/13/2018

	Tasks

		- rework growth

	Notes/Challenges

		growth has proven a lot more difficult that previously thought. we cannot make the assumption that growth will only occur when a cell is a perfect circle, there are many other shapes which a cell can take which will still allow for growth, I'm trying to figure out how to make growth work properly in a non ideal situattion.

		assumption, even in an ideal situation the averaging of the voigt forces on a new point should place it in the proper location.

		where will the new point be initially placed? midpoint along the membrane between the selected points.

		Another emormous issue is the order at which force is calculated. In the real world a single application of force would effect multiple areas of a system simulaneously. With a computer we are limited to only calculating one effect at a time. How best to split this?

		Important note, the mass of each node is 1/N * mass of nuc/cell. So when calculating viogt forces we must remember F = ma, now that we are given a mass we can calculate the rate at which a specific node is accelerating.

		A sum of forces regardless of the order they are summed up always end in the same final result. Remember! calculate all forces first before applying them. Applying individual forces before all acting forces are found could alter the state of the cell.

		So all forces of all cells must be calculated before we can determine how the nodes behave

		- nodes must now have velocities included, or we can split the velocity into a directional unit vector and speed.

			- After some research turns out this is a route inspection problem, this will have a significant effect in increaing computation time

			- No route inspection, I'll make my own traversal algorithm.
		


	Progress:

		- added default values to cell
		- growth has been sligtly re worked to include an increase in volume.
		- edge traversal method has been selected, will implement tomorrow


8/14/2018

	Tasks

		 - finalize force calculation and application system
		 - implement new growth procedure based off new force system

		

8/16/2018

	Tasks

		- Finalize remining forces

	Notes/Challeneges
		
		- Force from cytoplasm requires internal and environmental pressure, two values that are not given in paper. I have created a function that handles this force but have not yet determined for to calculate pressure value inputs 

	Progress

		- inner force calculator complete


8/20/2018

	Tasks

		- Debug Force Calculator

	Notes/Challenges

		- It seems is if there it to much force being applied to the cell nucleus, driving it to collapse on itself. Speed calculations also seem to be off, nodes should not be travelling at 225mph...

	Progress

		- force calculations now seem to work perfectly! I forgot to take into account that absolute value used on two points is a scalar distance value rather than another point, once the voigt calculation was adjusted everything fell into place.

8/21/2018

	Tasks

		- rework growth algorithm

	Notes/Challeneges

	Progress

		- growth positions works perfectly, but the growth function does not work as predicted once exposed to forces, additional changes need to be implemented

8/23/2018

	Tasks

		- Conitinue working on force application after growth
		- Test cell death

	Notes/Challenges

		Force works perfectly in ideal cell situtation but still continues to act erradically after growth or when applying the conditions for cell death

		- Ex. when spring lengths are shortened to simulate cell death, the nuclues size seems to explode while the membrane remains unchanged

		I think there might be an issue with the velocity calculator as once a node seems to be pushed in a certain direction the magnitude at which it travels in that direction increases after every force recalculation, disregarding any new forces applied to itself.

		I think it might also be worth taking another look at how mass is divided up along the cell and nucleus membrane. My initial assumptions may have been incorrect

	Progress:

		- Cell Death has been fixed. turned out velocity increases after new force applications were being accounted for twice, which led to nodes overpowering any forces after the initial push.


8/25/2018

	Tasks

		- Fix growth/force

	Notes/Challenges

		Force from membrane to the nuleus is to small to keep the nucleus from expanding outside of its constraints. Also forces applied onto the nucleus cause greater displacement due to the lower mass of nucleus nodes and the opposite occurs for membrane nodes, they hardly budge.

		To fix this I'm going to re evaluate my assumptions about the paper. So far I have been given two mass values, Cell Mass (1.0e-12 kg) and Nucleus Mass (1.0e-13 kg). Up until this point I have been assuming that each membrane node mass is equivalent to Cell_Mass*(1/N) and I have done the same with Nucleus Mass. 

		Now what I will do is assume that Cell Mass is not just the membrane mass but the mass of the whole cell including the nucleus, therefore I will create a Membrane Mass that is equivalent to Cell Mass - Nucleus Mass, and then divide mass values from there. 

		- Effects where minimal with the edits made to mass, problem must lie elsewhere

		Progress:

			Nothing significant, tested a few ideals. nothing yielded results


8/26/2018

	Tasks

		- Fix growth/force

	
	Notes/Challenges

		After some further inspection I noticed when I am trying to initiate cell death, the membrane node is not pulling the nucleus nodes back towards itself as they are supposed to. rather it's doing the opposite.

		- There might be an error with cell population and initial positioning....this is strange because the rendering thus far seems perfect...

	Progress:

		Everything works...so long as time dilation is at .25, this won't allow the algorithm to run efficiently, for now I will continue on with the remaining functionality, and return to the time dilation issue at a later point


8/26/2018

	Tasks

		- Finish Mitosis
		- Implement new growth idea

	Notes/Challenges

		Implement distance between new growth nodes to be determined by average cyt length of neighboring nodes rather than placed right in between. This might dramatically change the way the cell grows!

		Mitosis is currently being implemented

		I still don't know how to fix the dt issue, but it can be held of until the model is properly functioning. 

	Progress:

		 - Cells are now capable of growing on their own and adding new nodes when volume is increased

		 - New cyt length calculation in cell growth works excellently, cell behavior is much more predictable now!


8/30/2018

	Tasks

		- Finish Mitosis

	Notes/Challenges
			
		Again, the paper is vague in its descriptions and leaves out how mitosis forces acting on the cell are calculated and omits important variable numbers. I now need to determine how to best calculate the forces acting on a cell to simulate mitosis and at what point the seperation forces nodes to break from their neighbors and form their own independent cells.

		Also some assmptions the paper make about growth don't seem to line up with what should actually occur in reality...

	Progress:

		- Mitsosis Axis selection function complete

9/2/2018

	Tasks:

		- Finish Mitosis
		- Add render storage and deletion capabilities

	Notes/Challenges:

		After running some tests with the Mitosis Axis selection I began to run the program at larger iterations, as it turns out there was an error in how rest volume was calculated and it resulted in cell growth occuring too quickly and throwing it out of balance. A quick change was made to the rest vol calculation in cell_growth and cell growth has become even more stable. things are looking good!

		As iteration increase the selected axis become increasinly balanced out in terms of volume, this should result in a very predictable mitosis behavior!


9/3/2018

	Tasks:

		- Determine how to calculate mitosis forces

	Notes/Challenges:

		For now I do not know how to create forces that will accurately mimic true cell behaviour, for now I will create a substitute that will mimic what the model was attemping to depict. I will do this by creating forces that are equivalent to cell death spring rest length contractions on the membrane points designated to experience mitotic forces. For the membrane points I will create forces intended to mimic cell growth that instead point orthgonally in relation to the mitosis division axis.

		I will create this all in such as way that it will be easy to implement new mitotic forces once a better calculation is derived but this placehold should allow me to at leatst complete the remaining required functions for mitosis and properly test it


	Progress:

		- Mitotic forces in place for membrane points, results seem promising

9/5/2018

	Tasks:

		- Apply mitotic forces to nucleus points

	Notes/Challenges:

		- I think I know why the nucleus is warping. What I ended up doing with this cell is treating the axis as none static, it depends on the direction of the mitotic forces acting on the membrane cells. The membrane cell forces are produced by simiulating cell death and having a force applied to them that assumes the spring rest length is getting smaller. From these forces the orthogonal force is produced, this orthogonal force is dynamic and responds to the changes in the f_con. this might produce a feedback look that causes the nucleus to spiral and warp.

		- I will attempt to solve these issues using static axis instead which should produce a more balanced cell division process. 

		- Another issue might be that the cell during mitosis a cell's spring rest lengths still encourage expansion. It's unlikely that this is an issue but if the above solution does not work this might be worth looking into.

	Progress:

		- Force implemented, but direction seems to be incorrect, nucleus is being warpped.